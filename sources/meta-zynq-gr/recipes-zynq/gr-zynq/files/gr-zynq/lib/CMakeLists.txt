# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-zynq
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

SET(EXTERNAL_LIBS )

################################################################################
# Function to check for a library and, if found, add it to EXTERNAL_LIBS
################################################################################
FUNCTION(check_lib lib_name)
        FIND_LIBRARY(LIB_${lib_name} ${lib_name})
        IF (NOT LIB_${lib_name})
            MESSAGE(FATAL_ERROR "Can't find required library: ${lib_name}!")
        ELSE()
            SET(EXTERNAL_LIBS ${EXTERNAL_LIBS} ${LIB_${lib_name}} PARENT_SCOPE)
        ENDIF()
ENDFUNCTION()

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

list(APPEND zynq_sources
    CDMA2000_TC/bit_utils.cc
    CDMA2000_TC/tc_utils.cc
    CDMA2000_TC/get_3GPP_interleaver.cc
    CDMA2000_TC/cdma2000_TC_encoder.cc
    CDMA2000_TC/pccc_example.cc
    sw_CDMA2000_TC_decoder_impl.cc
    sw_CDMA2000_TC_encoder_impl.cc
    sw_complex_matrix_difference_ratio_impl.cc
    sw_complex_matrix_inv_10x10_impl.cc
    sw_vector_permute_impl.cc
    zynq_buffer.cc
    zynq_CDMA2000_TC_decoder_impl.cc
    zynq_complex_matrix_inv_10x10_impl.cc
    zynq_fft_impl.cc
    zynq_loopback_impl.cc
    zynq_loopback_legacy_impl.cc
)

set(zynq_sources "${zynq_sources}" PARENT_SCOPE)
if(NOT zynq_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT zynq_sources)

check_lib(dmaproxy)

add_library(gnuradio-zynq SHARED ${zynq_sources})
target_link_libraries(gnuradio-zynq 
    gnuradio::gnuradio-runtime
    ${EXTERNAL_LIBS})

target_include_directories(gnuradio-zynq
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-zynq PROPERTIES DEFINE_SYMBOL "gnuradio_zynq_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-zynq PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-zynq)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_zynq_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-zynq)

if(NOT test_zynq_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_zynq_sources)

foreach(qa_file ${test_zynq_sources})
    GR_ADD_CPP_TEST("zynq_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
